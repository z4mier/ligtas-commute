generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  ADMIN
  COMMUTER
  DRIVER
}

model User {
  id                 String   @id @default(cuid())
  fullName           String
  email              String?  @unique
  phone              String?  @unique
  password           String?
  role               Role     @default(COMMUTER)
  status             String   @default("PENDING") // "PENDING", "ACTIVE", "BANNED"
  mustChangePassword Boolean  @default(false)

  // === Verification ===
  isVerified          Boolean   @default(false)
  verificationMethod  String?   // "email" | "phone"
  verificationTarget  String?   // the actual address or phone used
  verificationCode    String?   // last code sent (plain in dev, hash in prod)
  codeExpiresAt       DateTime?
  lastOtpSentAt       DateTime?

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // === Relations ===
  driverProfile      DriverProfile?
  commuterProfile    CommuterProfile?
}

model DriverProfile {
  id           String  @id @default(cuid())
  userId       String  @unique
  user         User    @relation(fields: [userId], references: [id])
  licenseNo    String
  birthDate    DateTime
  address      String
  vehicleType  String
  busNo        String
  vehiclePlate String
  driverIdNo   String
  route        String
  qrToken      String  @unique
  status       String  @default("offline")
}

model CommuterProfile {
  id     String @id @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

// optional: separate OTP tracking for audit or multiple channels
model Otp {
  id         String   @id @default(cuid())
  target     String   // email or phone
  method     String   // "email" or "phone"
  code       String
  expiresAt  DateTime
  consumed   Boolean  @default(false)
  createdAt  DateTime @default(now())
}
